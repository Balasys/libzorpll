# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = zcrypt$(EXEEXT) test_readline$(EXEEXT) \
	test_registry$(EXEEXT) test_conns$(EXEEXT) test_ssl$(EXEEXT) \
	test_streams$(EXEEXT) test_random$(EXEEXT) \
	test_valid_chars$(EXEEXT) test_sockaddr$(EXEEXT) \
	test_blob$(EXEEXT) test_base64$(EXEEXT) test_codegzip$(EXEEXT) \
	test_codecipher$(EXEEXT) portrandom$(EXEEXT)
TESTS = test_registry$(EXEEXT) test_readline$(EXEEXT) zcrypt$(EXEEXT) \
	test_conns$(EXEEXT) test_ssl$(EXEEXT) test_random$(EXEEXT) \
	test_streams$(EXEEXT) test_valid_chars$(EXEEXT) \
	test_sockaddr$(EXEEXT) test_blob$(EXEEXT) test_base64$(EXEEXT) \
	test_codegzip$(EXEEXT) test_codecipher$(EXEEXT) \
	portrandom$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/zorp/zorplibconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_portrandom_OBJECTS = portrandom.$(OBJEXT) randtest.$(OBJEXT)
portrandom_OBJECTS = $(am_portrandom_OBJECTS)
portrandom_DEPENDENCIES = ../src/libzorpll.la
am_test_base64_OBJECTS = test_base64.$(OBJEXT)
test_base64_OBJECTS = $(am_test_base64_OBJECTS)
test_base64_DEPENDENCIES = ../src/libzorpll.la
am_test_blob_OBJECTS = test_blob.$(OBJEXT)
test_blob_OBJECTS = $(am_test_blob_OBJECTS)
test_blob_DEPENDENCIES = ../src/libzorpll.la
am_test_codecipher_OBJECTS = test_codecipher.$(OBJEXT)
test_codecipher_OBJECTS = $(am_test_codecipher_OBJECTS)
test_codecipher_DEPENDENCIES = ../src/libzorpll.la
am_test_codegzip_OBJECTS = test_codegzip.$(OBJEXT)
test_codegzip_OBJECTS = $(am_test_codegzip_OBJECTS)
test_codegzip_DEPENDENCIES = ../src/libzorpll.la
am_test_conns_OBJECTS = test_conns.$(OBJEXT)
test_conns_OBJECTS = $(am_test_conns_OBJECTS)
test_conns_DEPENDENCIES = ../src/libzorpll.la
am_test_random_OBJECTS = test_random.$(OBJEXT)
test_random_OBJECTS = $(am_test_random_OBJECTS)
test_random_DEPENDENCIES = ../src/libzorpll.la
am_test_readline_OBJECTS = test_readline.$(OBJEXT)
test_readline_OBJECTS = $(am_test_readline_OBJECTS)
test_readline_DEPENDENCIES = ../src/libzorpll.la
am_test_registry_OBJECTS = test_registry.$(OBJEXT)
test_registry_OBJECTS = $(am_test_registry_OBJECTS)
test_registry_DEPENDENCIES = ../src/libzorpll.la
am_test_sockaddr_OBJECTS = test_sockaddr.$(OBJEXT)
test_sockaddr_OBJECTS = $(am_test_sockaddr_OBJECTS)
test_sockaddr_DEPENDENCIES = ../src/libzorpll.la
am_test_ssl_OBJECTS = test_ssl.$(OBJEXT)
test_ssl_OBJECTS = $(am_test_ssl_OBJECTS)
test_ssl_DEPENDENCIES = ../src/libzorpll.la
am_test_streams_OBJECTS = test_streams.$(OBJEXT)
test_streams_OBJECTS = $(am_test_streams_OBJECTS)
test_streams_DEPENDENCIES = ../src/libzorpll.la
am_test_valid_chars_OBJECTS = test_valid_chars.$(OBJEXT)
test_valid_chars_OBJECTS = $(am_test_valid_chars_OBJECTS)
test_valid_chars_DEPENDENCIES = ../src/libzorpll.la
am_zcrypt_OBJECTS = zcrypt.$(OBJEXT)
zcrypt_OBJECTS = $(am_zcrypt_OBJECTS)
zcrypt_DEPENDENCIES = ../src/libzorpll.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/zorp
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(portrandom_SOURCES) $(test_base64_SOURCES) \
	$(test_blob_SOURCES) $(test_codecipher_SOURCES) \
	$(test_codegzip_SOURCES) $(test_conns_SOURCES) \
	$(test_random_SOURCES) $(test_readline_SOURCES) \
	$(test_registry_SOURCES) $(test_sockaddr_SOURCES) \
	$(test_ssl_SOURCES) $(test_streams_SOURCES) \
	$(test_valid_chars_SOURCES) $(zcrypt_SOURCES)
DIST_SOURCES = $(portrandom_SOURCES) $(test_base64_SOURCES) \
	$(test_blob_SOURCES) $(test_codecipher_SOURCES) \
	$(test_codegzip_SOURCES) $(test_conns_SOURCES) \
	$(test_random_SOURCES) $(test_readline_SOURCES) \
	$(test_registry_SOURCES) $(test_sockaddr_SOURCES) \
	$(test_ssl_SOURCES) $(test_streams_SOURCES) \
	$(test_valid_chars_SOURCES) $(zcrypt_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINARY_BRANCH = @BINARY_BRANCH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEPS_CPPFLAGS = @DEPS_CPPFLAGS@
DEPS_LIBS = @DEPS_LIBS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GLIB_LIBS = @GLIB_LIBS@
GLIB_MKENUMS = @GLIB_MKENUMS@
GOBJECT_QUERY = @GOBJECT_QUERY@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBZORPLL_LT_AGE = @LIBZORPLL_LT_AGE@
LIBZORPLL_LT_COMPAT_BRANCH = @LIBZORPLL_LT_COMPAT_BRANCH@
LIBZORPLL_LT_COMPAT_PL = @LIBZORPLL_LT_COMPAT_PL@
LIBZORPLL_LT_CURRENT = @LIBZORPLL_LT_CURRENT@
LIBZORPLL_LT_RELEASE = @LIBZORPLL_LT_RELEASE@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_CFLAGS = @OPENSSL_CFLAGS@
OPENSSL_CPPFLAGS = @OPENSSL_CPPFLAGS@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
RELEASE_TAG = @RELEASE_TAG@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNAPSHOT_VERSION = @SNAPSHOT_VERSION@
SOURCE_REVISION = @SOURCE_REVISION@
STRIP = @STRIP@
VERSION = @VERSION@
ZORPLIBLL_VERSION = @ZORPLIBLL_VERSION@
ZORPLIBLL_WIN_VERSION = @ZORPLIBLL_WIN_VERSION@
ZORPLIB_PIDFILE_DIR = @ZORPLIB_PIDFILE_DIR@
ZORPLIB_TEMP_DIR = @ZORPLIB_TEMP_DIR@
ZORP_LIBS = @ZORP_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I$(top_srcdir)/src -I../src
zcrypt_SOURCES = zcrypt.c
zcrypt_LDADD = ../src/libzorpll.la
test_readline_SOURCES = test_readline.c
test_readline_LDADD = ../src/libzorpll.la
test_registry_SOURCES = test_registry.c
test_registry_LDADD = ../src/libzorpll.la
test_conns_SOURCES = test_conns.c
test_conns_LDADD = ../src/libzorpll.la
test_ssl_SOURCES = test_ssl.c
test_ssl_LDADD = ../src/libzorpll.la
test_random_SOURCES = test_random.c
test_random_LDADD = ../src/libzorpll.la
test_streams_SOURCES = test_streams.c
test_streams_LDADD = ../src/libzorpll.la
test_valid_chars_SOURCES = test_valid_chars.c
test_valid_chars_LDADD = ../src/libzorpll.la
test_sockaddr_SOURCES = test_sockaddr.c
test_sockaddr_LDADD = ../src/libzorpll.la
test_blob_SOURCES = test_blob.c
test_blob_LDADD = ../src/libzorpll.la
test_base64_SOURCES = test_base64.c
test_base64_LDADD = ../src/libzorpll.la
test_codegzip_SOURCES = test_codegzip.c
test_codegzip_LDADD = ../src/libzorpll.la
test_codecipher_SOURCES = test_codecipher.c
test_codecipher_LDADD = ../src/libzorpll.la
portrandom_SOURCES = portrandom.c randtest.c randtest.h
portrandom_LDADD = ../src/libzorpll.la -lm
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
portrandom$(EXEEXT): $(portrandom_OBJECTS) $(portrandom_DEPENDENCIES) 
	@rm -f portrandom$(EXEEXT)
	$(LINK) $(portrandom_OBJECTS) $(portrandom_LDADD) $(LIBS)
test_base64$(EXEEXT): $(test_base64_OBJECTS) $(test_base64_DEPENDENCIES) 
	@rm -f test_base64$(EXEEXT)
	$(LINK) $(test_base64_OBJECTS) $(test_base64_LDADD) $(LIBS)
test_blob$(EXEEXT): $(test_blob_OBJECTS) $(test_blob_DEPENDENCIES) 
	@rm -f test_blob$(EXEEXT)
	$(LINK) $(test_blob_OBJECTS) $(test_blob_LDADD) $(LIBS)
test_codecipher$(EXEEXT): $(test_codecipher_OBJECTS) $(test_codecipher_DEPENDENCIES) 
	@rm -f test_codecipher$(EXEEXT)
	$(LINK) $(test_codecipher_OBJECTS) $(test_codecipher_LDADD) $(LIBS)
test_codegzip$(EXEEXT): $(test_codegzip_OBJECTS) $(test_codegzip_DEPENDENCIES) 
	@rm -f test_codegzip$(EXEEXT)
	$(LINK) $(test_codegzip_OBJECTS) $(test_codegzip_LDADD) $(LIBS)
test_conns$(EXEEXT): $(test_conns_OBJECTS) $(test_conns_DEPENDENCIES) 
	@rm -f test_conns$(EXEEXT)
	$(LINK) $(test_conns_OBJECTS) $(test_conns_LDADD) $(LIBS)
test_random$(EXEEXT): $(test_random_OBJECTS) $(test_random_DEPENDENCIES) 
	@rm -f test_random$(EXEEXT)
	$(LINK) $(test_random_OBJECTS) $(test_random_LDADD) $(LIBS)
test_readline$(EXEEXT): $(test_readline_OBJECTS) $(test_readline_DEPENDENCIES) 
	@rm -f test_readline$(EXEEXT)
	$(LINK) $(test_readline_OBJECTS) $(test_readline_LDADD) $(LIBS)
test_registry$(EXEEXT): $(test_registry_OBJECTS) $(test_registry_DEPENDENCIES) 
	@rm -f test_registry$(EXEEXT)
	$(LINK) $(test_registry_OBJECTS) $(test_registry_LDADD) $(LIBS)
test_sockaddr$(EXEEXT): $(test_sockaddr_OBJECTS) $(test_sockaddr_DEPENDENCIES) 
	@rm -f test_sockaddr$(EXEEXT)
	$(LINK) $(test_sockaddr_OBJECTS) $(test_sockaddr_LDADD) $(LIBS)
test_ssl$(EXEEXT): $(test_ssl_OBJECTS) $(test_ssl_DEPENDENCIES) 
	@rm -f test_ssl$(EXEEXT)
	$(LINK) $(test_ssl_OBJECTS) $(test_ssl_LDADD) $(LIBS)
test_streams$(EXEEXT): $(test_streams_OBJECTS) $(test_streams_DEPENDENCIES) 
	@rm -f test_streams$(EXEEXT)
	$(LINK) $(test_streams_OBJECTS) $(test_streams_LDADD) $(LIBS)
test_valid_chars$(EXEEXT): $(test_valid_chars_OBJECTS) $(test_valid_chars_DEPENDENCIES) 
	@rm -f test_valid_chars$(EXEEXT)
	$(LINK) $(test_valid_chars_OBJECTS) $(test_valid_chars_LDADD) $(LIBS)
zcrypt$(EXEEXT): $(zcrypt_OBJECTS) $(zcrypt_DEPENDENCIES) 
	@rm -f zcrypt$(EXEEXT)
	$(LINK) $(zcrypt_OBJECTS) $(zcrypt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/portrandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_blob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_codecipher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_codegzip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_conns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_readline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sockaddr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ssl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_streams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_valid_chars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zcrypt.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
